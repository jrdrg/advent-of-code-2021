// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("rescript/lib/js/list.js");
var $$String = require("rescript/lib/js/string.js");
var Caml_format = require("rescript/lib/js/caml_format.js");

var inputStr = "forward 2\ndown 4\ndown 3\nup 4\ndown 1\ndown 8\nup 9\nforward 1\ndown 9\nforward 6\ndown 7\nforward 1\ndown 1\nup 2\nforward 8\ndown 3\ndown 9\ndown 3\ndown 8\nforward 3\nforward 5\nup 8\nforward 6\nforward 5\nforward 6\nforward 4\nup 3\nforward 1\nup 4\nforward 2\nup 2\nup 2\ndown 6\nforward 3\nforward 4\nforward 5\nforward 1\ndown 1\ndown 1\nforward 3\nforward 2\nup 7\nforward 6\ndown 5\nforward 9\nup 4\ndown 6\nup 8\nforward 7\nforward 5\nforward 8\ndown 5\ndown 9\nforward 3\nforward 2\nforward 9\nforward 1\ndown 3\nforward 1\ndown 9\nforward 4\nforward 3\nforward 7\nforward 6\nforward 6\nforward 6\nforward 8\nforward 5\nforward 4\nup 1\nforward 8\nforward 1\ndown 7\nforward 2\nup 9\nforward 4\nup 7\ndown 4\ndown 3\ndown 9\ndown 7\ndown 1\nforward 2\nup 6\ndown 2\ndown 3\ndown 5\nforward 6\nforward 5\nforward 6\nforward 2\nforward 1\nforward 5\nforward 5\ndown 9\nforward 8\nforward 3\ndown 8\nup 2\nforward 5\nforward 6\ndown 1\ndown 7\ndown 5\nforward 3\ndown 9\ndown 2\nforward 6\nforward 6\nforward 4\nup 5\nup 2\nup 2\nup 2\nforward 2\nup 3\ndown 4\nforward 2\ndown 6\nforward 1\ndown 8\nup 6\nup 9\nforward 7\nforward 5\nforward 9\nforward 5\nup 3\nup 6\nup 3\nforward 9\nforward 7\nup 7\nforward 3\nforward 3\ndown 5\ndown 2\ndown 1\ndown 8\nup 7\ndown 2\nup 4\nforward 5\ndown 5\ndown 8\ndown 4\ndown 8\ndown 4\ndown 8\ndown 2\nforward 5\ndown 9\nforward 6\nforward 5\nup 4\nup 2\ndown 7\ndown 9\nforward 6\nforward 6\ndown 3\nup 9\nup 8\ndown 4\nforward 9\ndown 7\ndown 4\ndown 6\ndown 4\ndown 7\ndown 2\nup 9\nforward 9\nforward 6\ndown 6\nup 6\ndown 7\ndown 5\nforward 9\ndown 9\ndown 8\ndown 6\ndown 3\nforward 5\ndown 5\nforward 2\nup 4\ndown 5\nforward 6\nforward 6\nforward 6\ndown 4\ndown 8\ndown 3\ndown 5\nforward 6\nforward 2\nforward 4\nforward 2\nforward 3\nup 9\nforward 8\ndown 5\ndown 9\nforward 5\nforward 7\ndown 5\ndown 2\nup 3\nforward 4\nforward 4\nup 4\nforward 5\nforward 8\nup 4\nforward 3\ndown 8\nup 8\nforward 9\nup 9\nforward 5\nforward 8\ndown 8\nup 9\nup 2\nforward 3\nforward 7\ndown 9\ndown 6\nforward 5\ndown 1\nforward 6\nforward 8\nup 2\ndown 8\nforward 2\nforward 7\ndown 7\ndown 7\ndown 7\ndown 3\nup 6\ndown 5\ndown 4\nforward 1\nforward 3\ndown 3\ndown 1\nforward 7\nforward 8\nup 8\nforward 3\nforward 8\nup 9\ndown 5\ndown 9\nforward 4\ndown 9\nup 8\nup 1\nforward 6\ndown 2\nup 2\ndown 3\nup 1\ndown 7\ndown 8\nforward 6\nforward 8\nup 5\nup 2\ndown 1\nforward 6\ndown 1\nup 6\ndown 9\ndown 8\ndown 5\ndown 7\nforward 8\ndown 1\nup 5\ndown 2\ndown 5\nforward 9\nup 8\ndown 6\nforward 7\nforward 8\ndown 5\nforward 3\nforward 4\nup 1\nforward 2\nforward 9\nup 7\ndown 9\nforward 2\ndown 3\ndown 6\ndown 9\nforward 4\nup 3\nforward 3\ndown 6\nforward 1\ndown 3\ndown 4\ndown 8\ndown 5\nforward 6\ndown 7\nforward 6\nup 8\nforward 9\ndown 3\nforward 8\nforward 9\ndown 3\nforward 9\nforward 4\nforward 2\ndown 4\ndown 1\nforward 3\nforward 3\nforward 3\ndown 1\ndown 6\nup 1\ndown 6\nforward 2\ndown 6\ndown 4\ndown 4\nforward 5\ndown 4\nup 4\nup 7\ndown 4\nforward 4\ndown 8\ndown 5\ndown 2\ndown 3\nforward 3\ndown 4\nforward 8\ndown 4\ndown 2\nup 2\ndown 8\nforward 9\ndown 1\nup 1\ndown 8\ndown 8\nup 2\ndown 8\nup 2\nforward 4\ndown 2\nforward 8\ndown 1\ndown 9\nforward 3\nup 5\ndown 8\ndown 2\nforward 5\nforward 1\nforward 6\nforward 1\ndown 8\nforward 3\ndown 5\nup 7\ndown 8\nforward 5\ndown 8\nforward 2\ndown 6\ndown 9\nforward 9\ndown 8\nforward 7\nforward 1\nforward 9\nforward 8\nforward 2\ndown 4\nforward 8\nup 7\ndown 2\ndown 6\nforward 5\nforward 4\ndown 5\ndown 2\nforward 2\nup 8\nup 4\ndown 8\nforward 2\nup 3\nforward 3\ndown 4\nforward 8\nforward 7\nforward 4\nup 1\ndown 6\nforward 1\ndown 3\nforward 6\nup 3\nforward 7\ndown 6\nforward 7\nforward 5\nforward 8\ndown 9\nup 7\ndown 1\ndown 5\nforward 1\ndown 8\ndown 1\nforward 4\nforward 5\nforward 5\ndown 9\nforward 9\ndown 4\nforward 1\nup 8\ndown 5\ndown 9\ndown 3\ndown 2\ndown 5\ndown 3\nforward 7\nup 3\nforward 3\ndown 4\nup 5\nforward 4\nup 6\ndown 4\nforward 2\nup 3\ndown 2\nup 1\nup 7\ndown 5\nup 3\nforward 5\nup 2\ndown 9\ndown 6\nforward 5\nup 3\ndown 7\nup 1\nforward 1\nforward 3\ndown 9\ndown 1\nforward 6\ndown 5\nforward 8\ndown 1\ndown 5\nup 6\nforward 8\nforward 8\nforward 9\ndown 1\ndown 6\ndown 8\nup 1\ndown 7\nforward 3\nforward 5\nforward 2\ndown 4\nforward 4\nforward 2\ndown 8\nup 2\ndown 1\nup 9\ndown 4\nup 9\ndown 2\nforward 5\nforward 4\nforward 7\ndown 8\nforward 4\ndown 5\nforward 7\nforward 2\ndown 6\ndown 3\nforward 7\nforward 8\nforward 2\ndown 3\nforward 4\ndown 6\nforward 4\nforward 3\ndown 3\nforward 3\ndown 8\ndown 2\nforward 6\ndown 4\ndown 9\ndown 2\ndown 7\nforward 4\nforward 1\nforward 7\ndown 9\ndown 5\nforward 5\nup 7\nforward 4\ndown 1\nup 3\ndown 5\ndown 3\ndown 7\ndown 7\ndown 7\nup 6\nforward 3\ndown 6\ndown 3\nup 2\ndown 7\nforward 5\nforward 5\ndown 6\nforward 9\nup 2\nforward 6\nforward 3\nforward 5\nforward 9\nforward 1\nup 4\nup 7\ndown 8\ndown 3\nforward 1\ndown 6\nup 8\ndown 7\ndown 8\ndown 9\ndown 9\nforward 5\ndown 6\nup 7\ndown 3\ndown 5\ndown 5\ndown 6\nup 3\nforward 8\ndown 4\nup 8\nforward 4\ndown 1\nup 8\nup 5\ndown 4\nup 8\nforward 8\nforward 7\nup 3\ndown 7\nforward 8\ndown 1\ndown 7\ndown 5\ndown 5\ndown 2\nup 3\nforward 3\nforward 8\ndown 4\ndown 3\nup 7\ndown 1\ndown 9\nforward 9\nforward 1\nforward 1\nforward 2\ndown 7\ndown 9\nup 5\ndown 1\nforward 4\nforward 9\nforward 3\nforward 3\nforward 4\nforward 1\ndown 2\ndown 2\nup 1\nforward 7\nforward 8\nforward 6\nup 6\ndown 5\nforward 2\ndown 4\nforward 5\nforward 2\nforward 7\ndown 1\ndown 9\nforward 2\nforward 2\nforward 3\nup 2\nup 2\nup 2\ndown 5\nforward 5\nforward 9\ndown 4\ndown 2\ndown 5\ndown 9\nup 7\nforward 2\nforward 7\nforward 4\nforward 5\ndown 5\ndown 8\ndown 9\ndown 4\nup 8\nup 1\nforward 8\nup 2\nup 8\nup 4\nforward 1\nforward 4\ndown 9\nup 1\ndown 8\ndown 4\ndown 4\ndown 2\ndown 9\nforward 7\nup 1\ndown 4\nforward 4\ndown 8\nforward 1\nforward 8\nforward 1\nup 7\nforward 4\nforward 6\nforward 2\nforward 8\nup 4\ndown 1\nup 7\nup 8\ndown 9\nforward 3\ndown 3\nforward 6\nforward 5\nup 1\nforward 9\nup 6\nup 1\nforward 1\nforward 2\nforward 7\ndown 8\nup 4\nforward 4\ndown 3\ndown 3\nforward 2\nforward 6\ndown 4\nforward 2\nforward 8\nup 5\ndown 1\nforward 7\nup 6\nforward 2\ndown 6\nforward 7\ndown 2\ndown 9\ndown 1\nup 4\nup 8\ndown 7\nup 6\nforward 3\nforward 4\ndown 6\nforward 5\ndown 3\nup 6\ndown 3\ndown 7\nforward 7\nup 3\ndown 1\nforward 2\nup 2\nup 6\nup 1\nup 8\nup 3\ndown 9\ndown 8\nforward 6\nup 9\ndown 1\nforward 5\ndown 4\nup 7\ndown 5\nup 1\ndown 9\ndown 8\ndown 2\ndown 1\nup 8\nup 7\nup 5\ndown 5\nforward 1\nforward 6\ndown 4\ndown 3\nforward 5\nforward 5\nup 5\ndown 6\ndown 6\ndown 2\ndown 7\nup 1\nup 9\nup 4\ndown 7\nup 5\nforward 5\nforward 6\nforward 6\ndown 7\ndown 6\nup 8\nforward 8\nforward 1\ndown 6\nup 2\nforward 8\ndown 7\ndown 5\nup 1\nup 7\nup 2\nup 3\ndown 3\nforward 1\nforward 4\nup 8\nforward 9\ndown 1\nup 4\nforward 3\ndown 9\ndown 9\nforward 4\ndown 8\nup 2\nforward 1\nforward 3\nup 5\nforward 5\nup 4\nforward 5\nforward 6\nforward 2\nforward 4\nup 5\ndown 7\nup 1\nforward 7\ndown 5\nforward 5\ndown 5\nup 2\ndown 3\nforward 6\nforward 5\nup 4\nup 5\ndown 2\nforward 2\ndown 2\ndown 2\nup 8\nup 2\ndown 7\nforward 3\ndown 7\ndown 7\ndown 2\nup 5\nup 5\nforward 5\nup 5\ndown 9\ndown 1\nup 7\nup 5\nforward 5\nforward 1\ndown 7\ndown 8\ndown 4\nforward 1\ndown 2\nup 9\nforward 1\nforward 5\nforward 8\ndown 7\ndown 6\nup 2\ndown 6\nforward 4\ndown 9\ndown 1\ndown 9\nup 5\nup 1\ndown 9\nforward 7\nup 4\ndown 5\nup 1\nforward 2\nforward 2\nup 9\nforward 8\nup 4\nup 1\nup 6\nup 5\ndown 5\nup 4\nup 1\nforward 9\nforward 3\ndown 4\ndown 9\ndown 4\nforward 9\ndown 2\ndown 1\nup 9\nup 4\nforward 8\nforward 9\nforward 8\nup 4\nforward 6\ndown 7\ndown 6\ndown 1\nforward 5\nforward 4\nup 4\nforward 4\nup 2\nforward 7\nforward 2\ndown 2\ndown 1\nup 5\nup 7\ndown 5\ndown 9\nup 1\ndown 2\nforward 4\nforward 8\nup 1\nforward 7\ndown 7\nforward 1\ndown 2\ndown 9\nforward 7\nforward 6\nforward 1\nforward 6\nforward 9\nup 8\nforward 4\nup 6\nforward 9\nforward 1\nforward 7\nforward 9\ndown 9\ndown 7\ndown 6\ndown 2\ndown 4\nforward 9\nforward 4\nforward 6\nforward 1\nforward 3\ndown 2\nforward 9\ndown 9\nforward 8\nforward 7\nup 4\nforward 7\nforward 8\nup 4\ndown 1\nup 3\ndown 1\ndown 9\ndown 5\ndown 2\ndown 8\ndown 3\ndown 8\nforward 2\nforward 5\ndown 5\ndown 7\nforward 4\nup 6\nforward 5\nup 2\nup 6\nforward 6\ndown 7\ndown 8\nup 4\nup 9\nforward 7\ndown 3\nforward 8\nforward 6\nup 3\nup 4\ndown 1\nforward 2\ndown 9\ndown 1\ndown 6\ndown 5\nup 7\nforward 7\ndown 6\ndown 2\ndown 5\nup 2\nforward 7\nforward 2\ndown 6\ndown 1\nforward 4\nup 9\ndown 1\ndown 7\nforward 1";

var input = $$String.split_on_char(/* '\n' */10, inputStr);

function applyDirection(param, direction) {
  var depth = param[1];
  var hPos = param[0];
  var match = $$String.split_on_char(/* ' ' */32, direction);
  if (!match) {
    return [
            hPos,
            depth
          ];
  }
  switch (match.hd) {
    case "down" :
        var match$1 = match.tl;
        if (match$1 && !match$1.tl) {
          return [
                  hPos,
                  depth + Caml_format.caml_int_of_string(match$1.hd) | 0
                ];
        } else {
          return [
                  hPos,
                  depth
                ];
        }
    case "forward" :
        var match$2 = match.tl;
        if (match$2 && !match$2.tl) {
          return [
                  hPos + Caml_format.caml_int_of_string(match$2.hd) | 0,
                  depth
                ];
        } else {
          return [
                  hPos,
                  depth
                ];
        }
    case "up" :
        var match$3 = match.tl;
        if (match$3 && !match$3.tl) {
          return [
                  hPos,
                  depth - Caml_format.caml_int_of_string(match$3.hd) | 0
                ];
        } else {
          return [
                  hPos,
                  depth
                ];
        }
    default:
      return [
              hPos,
              depth
            ];
  }
}

function part1(param) {
  var match = List.fold_left((function (param, next) {
          return applyDirection([
                      param[0],
                      param[1]
                    ], next);
        }), [
        0,
        0
      ], input);
  return Math.imul(match[0], match[1]);
}

console.log("Part 1", part1(undefined));

function applyDirectionWithAim(param, direction) {
  var aim = param[2];
  var depth = param[1];
  var hPos = param[0];
  var match = $$String.split_on_char(/* ' ' */32, direction);
  if (!match) {
    return [
            hPos,
            depth,
            aim
          ];
  }
  switch (match.hd) {
    case "down" :
        var match$1 = match.tl;
        if (match$1 && !match$1.tl) {
          return [
                  hPos,
                  depth,
                  aim + Caml_format.caml_int_of_string(match$1.hd) | 0
                ];
        } else {
          return [
                  hPos,
                  depth,
                  aim
                ];
        }
    case "forward" :
        var match$2 = match.tl;
        if (!match$2) {
          return [
                  hPos,
                  depth,
                  aim
                ];
        }
        if (match$2.tl) {
          return [
                  hPos,
                  depth,
                  aim
                ];
        }
        var amount = match$2.hd;
        return [
                hPos + Caml_format.caml_int_of_string(amount) | 0,
                depth + Math.imul(aim, Caml_format.caml_int_of_string(amount)) | 0,
                aim
              ];
    case "up" :
        var match$3 = match.tl;
        if (match$3 && !match$3.tl) {
          return [
                  hPos,
                  depth,
                  aim - Caml_format.caml_int_of_string(match$3.hd) | 0
                ];
        } else {
          return [
                  hPos,
                  depth,
                  aim
                ];
        }
    default:
      return [
              hPos,
              depth,
              aim
            ];
  }
}

function part2(param) {
  var match = List.fold_left((function (param, next) {
          return applyDirectionWithAim([
                      param[0],
                      param[1],
                      param[2]
                    ], next);
        }), [
        0,
        0,
        0
      ], input);
  return Math.imul(match[0], match[1]);
}

console.log("Part 2", part2(undefined));

var exampleInputStr = "forward 5\ndown 5\nforward 8\nup 3\ndown 8\nforward 2";

exports.exampleInputStr = exampleInputStr;
exports.inputStr = inputStr;
exports.input = input;
exports.applyDirection = applyDirection;
exports.part1 = part1;
exports.applyDirectionWithAim = applyDirectionWithAim;
exports.part2 = part2;
/* input Not a pure module */
