// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var List = require("rescript/lib/js/list.js");
var $$Array = require("rescript/lib/js/array.js");
var $$String = require("rescript/lib/js/string.js");
var Caml_array = require("rescript/lib/js/caml_array.js");
var Caml_format = require("rescript/lib/js/caml_format.js");
var Belt_MapString = require("rescript/lib/js/belt_MapString.js");

var inputStr = "503,977 -> 843,637\n437,518 -> 437,225\n269,250 -> 625,250\n846,751 -> 646,751\n18,731 -> 402,731\n749,923 -> 749,986\n557,758 -> 557,797\n589,54 -> 589,616\n20,136 -> 819,935\n123,983 -> 12,983\n802,624 -> 709,624\n600,458 -> 128,458\n209,703 -> 459,703\n944,415 -> 742,415\n270,718 -> 656,332\n168,339 -> 283,339\n558,172 -> 695,309\n519,524 -> 480,524\n456,400 -> 134,722\n355,961 -> 352,961\n757,158 -> 49,866\n300,254 -> 618,254\n554,275 -> 859,275\n47,612 -> 622,37\n696,885 -> 696,856\n342,803 -> 342,429\n830,649 -> 254,73\n54,921 -> 958,17\n72,691 -> 818,691\n80,72 -> 80,546\n762,649 -> 762,371\n117,39 -> 605,39\n778,605 -> 610,773\n159,25 -> 67,25\n462,825 -> 766,825\n295,167 -> 357,167\n741,379 -> 11,379\n942,230 -> 942,26\n802,672 -> 802,311\n672,759 -> 330,759\n419,97 -> 848,526\n244,262 -> 938,956\n281,988 -> 281,879\n471,451 -> 471,907\n238,387 -> 238,665\n907,129 -> 907,368\n119,734 -> 155,770\n306,119 -> 306,568\n166,175 -> 166,277\n591,32 -> 591,855\n779,324 -> 916,324\n785,245 -> 884,245\n504,884 -> 781,884\n405,967 -> 664,967\n17,16 -> 989,988\n429,944 -> 729,944\n15,31 -> 918,934\n22,963 -> 971,14\n199,280 -> 481,562\n792,550 -> 792,485\n215,141 -> 215,58\n511,560 -> 511,224\n940,134 -> 166,908\n666,212 -> 666,193\n881,514 -> 117,514\n271,416 -> 614,73\n354,784 -> 354,41\n866,152 -> 866,969\n75,924 -> 868,131\n944,507 -> 944,556\n726,315 -> 624,315\n195,122 -> 593,520\n463,311 -> 946,794\n734,698 -> 734,953\n520,98 -> 915,98\n125,139 -> 616,139\n570,841 -> 206,477\n430,442 -> 430,893\n653,59 -> 653,155\n906,883 -> 314,291\n932,157 -> 100,989\n526,244 -> 362,244\n28,837 -> 792,73\n386,426 -> 386,673\n121,66 -> 203,66\n747,121 -> 392,476\n590,989 -> 230,989\n795,83 -> 795,398\n741,522 -> 741,677\n142,166 -> 470,166\n13,645 -> 493,165\n418,567 -> 418,970\n94,877 -> 782,189\n603,426 -> 603,916\n364,304 -> 191,304\n754,146 -> 754,507\n294,678 -> 438,678\n641,633 -> 217,633\n31,133 -> 831,933\n250,976 -> 250,355\n274,558 -> 899,558\n818,507 -> 693,507\n414,465 -> 924,975\n116,729 -> 116,951\n960,843 -> 149,32\n724,127 -> 498,353\n552,43 -> 964,43\n224,853 -> 224,363\n768,214 -> 768,88\n518,414 -> 518,119\n917,824 -> 948,824\n37,81 -> 882,926\n333,390 -> 967,390\n175,453 -> 388,240\n960,395 -> 960,697\n468,37 -> 468,275\n745,318 -> 425,318\n676,425 -> 903,198\n531,663 -> 86,663\n557,834 -> 557,967\n650,931 -> 383,664\n906,197 -> 906,567\n675,637 -> 326,288\n227,977 -> 51,977\n347,524 -> 793,970\n778,850 -> 778,342\n343,155 -> 343,739\n970,167 -> 161,976\n800,127 -> 800,667\n531,533 -> 193,533\n222,776 -> 222,873\n922,29 -> 13,938\n452,808 -> 452,793\n926,142 -> 926,198\n940,93 -> 55,978\n335,51 -> 938,654\n789,352 -> 307,352\n457,419 -> 469,419\n463,12 -> 463,132\n881,95 -> 431,95\n531,57 -> 531,40\n179,308 -> 516,308\n767,907 -> 629,907\n362,457 -> 362,262\n774,896 -> 154,276\n549,243 -> 247,243\n130,933 -> 202,933\n266,639 -> 189,716\n209,717 -> 209,844\n625,296 -> 625,575\n739,785 -> 873,785\n713,857 -> 94,238\n97,28 -> 937,868\n876,734 -> 344,202\n180,608 -> 557,608\n669,566 -> 669,389\n112,779 -> 267,624\n325,669 -> 449,669\n102,915 -> 357,915\n882,839 -> 882,512\n330,699 -> 330,858\n773,851 -> 773,429\n171,187 -> 450,187\n166,726 -> 166,74\n15,134 -> 750,869\n245,126 -> 245,518\n919,484 -> 919,602\n918,900 -> 918,372\n736,515 -> 708,487\n790,777 -> 790,303\n479,541 -> 381,541\n85,243 -> 317,475\n619,441 -> 619,823\n688,658 -> 688,404\n381,475 -> 891,985\n461,529 -> 145,213\n833,885 -> 404,885\n315,502 -> 315,770\n450,934 -> 740,934\n634,334 -> 634,202\n785,866 -> 785,913\n976,627 -> 976,102\n65,491 -> 570,491\n974,257 -> 503,728\n662,938 -> 720,938\n232,472 -> 215,472\n805,504 -> 805,476\n99,909 -> 99,399\n64,947 -> 926,85\n123,645 -> 153,615\n908,10 -> 92,826\n49,174 -> 819,944\n115,136 -> 863,884\n695,91 -> 695,612\n715,527 -> 550,362\n914,125 -> 914,86\n14,980 -> 981,13\n14,308 -> 14,355\n356,895 -> 766,485\n989,10 -> 10,989\n833,292 -> 833,184\n786,785 -> 733,785\n824,53 -> 116,53\n349,547 -> 349,66\n594,189 -> 636,189\n359,399 -> 769,809\n600,751 -> 600,46\n520,236 -> 228,528\n978,610 -> 978,832\n689,575 -> 258,575\n664,734 -> 850,920\n245,672 -> 245,878\n337,509 -> 578,509\n893,613 -> 380,613\n875,608 -> 875,444\n264,701 -> 946,19\n358,267 -> 358,648\n926,61 -> 926,378\n46,885 -> 190,885\n662,131 -> 82,131\n301,53 -> 301,533\n21,839 -> 915,839\n92,174 -> 113,174\n145,680 -> 294,680\n268,773 -> 268,193\n698,893 -> 809,893\n300,512 -> 807,512\n749,408 -> 279,408\n439,214 -> 439,172\n622,740 -> 339,740\n400,253 -> 400,486\n859,686 -> 387,214\n974,485 -> 974,486\n70,987 -> 951,106\n630,449 -> 630,544\n796,212 -> 608,24\n835,959 -> 835,725\n779,755 -> 96,72\n582,778 -> 440,636\n350,479 -> 827,479\n924,40 -> 605,40\n918,832 -> 918,617\n669,590 -> 191,112\n748,214 -> 748,462\n350,703 -> 163,703\n393,791 -> 393,240\n569,857 -> 569,939\n412,375 -> 412,603\n488,975 -> 22,509\n100,372 -> 100,685\n170,669 -> 212,669\n546,734 -> 546,274\n492,172 -> 492,354\n36,134 -> 801,899\n501,773 -> 582,773\n287,694 -> 287,939\n381,988 -> 367,988\n609,360 -> 609,478\n310,158 -> 25,443\n409,716 -> 409,27\n655,959 -> 383,687\n16,697 -> 611,102\n184,290 -> 930,290\n580,79 -> 598,97\n950,65 -> 777,65\n144,288 -> 821,965\n986,685 -> 986,412\n549,702 -> 549,369\n841,148 -> 259,730\n958,31 -> 958,810\n12,908 -> 856,64\n264,793 -> 264,960\n249,115 -> 249,935\n707,714 -> 108,714\n527,192 -> 982,647\n703,883 -> 703,580\n535,346 -> 543,346\n851,185 -> 83,953\n984,586 -> 984,681\n913,574 -> 350,11\n317,221 -> 405,221\n398,673 -> 160,435\n953,264 -> 547,670\n790,115 -> 538,367\n943,236 -> 295,884\n571,746 -> 571,231\n286,318 -> 131,318\n143,251 -> 436,544\n838,435 -> 793,435\n732,782 -> 732,407\n244,287 -> 244,335\n376,29 -> 75,29\n604,732 -> 738,732\n730,30 -> 533,30\n891,474 -> 891,25\n786,140 -> 368,140\n951,583 -> 828,460\n665,897 -> 44,276\n217,905 -> 742,905\n745,583 -> 256,583\n923,22 -> 23,922\n763,336 -> 943,516\n755,678 -> 755,101\n35,790 -> 706,119\n841,658 -> 841,634\n986,66 -> 986,412\n740,69 -> 740,878\n852,733 -> 453,733\n657,273 -> 215,715\n239,824 -> 239,79\n340,482 -> 340,238\n969,834 -> 303,168\n238,718 -> 931,718\n603,63 -> 603,363\n596,135 -> 367,135\n184,474 -> 184,612\n39,60 -> 920,941\n456,103 -> 894,541\n929,35 -> 738,35\n199,528 -> 707,528\n649,251 -> 134,766\n969,209 -> 719,459\n568,45 -> 306,307\n259,703 -> 426,536\n964,737 -> 342,115\n101,890 -> 604,890\n57,223 -> 812,978\n939,99 -> 167,871\n920,438 -> 920,247\n185,384 -> 643,384\n489,783 -> 121,415\n837,938 -> 250,351\n63,920 -> 945,38\n475,45 -> 510,10\n881,872 -> 141,132\n24,238 -> 24,468\n409,523 -> 409,706\n200,309 -> 631,740\n586,385 -> 900,385\n219,250 -> 219,327\n854,526 -> 854,725\n946,343 -> 946,267\n847,746 -> 717,616\n172,203 -> 346,29\n693,652 -> 545,652\n824,115 -> 192,115\n843,908 -> 333,908\n769,784 -> 662,784\n490,535 -> 490,524\n545,699 -> 11,699\n792,544 -> 287,39\n895,712 -> 895,41\n887,350 -> 624,350\n614,475 -> 924,165\n93,961 -> 265,789\n57,71 -> 852,866\n282,738 -> 844,176\n898,251 -> 898,669\n949,872 -> 866,872\n765,408 -> 545,408\n691,503 -> 235,959\n198,491 -> 227,462\n973,40 -> 56,957\n802,402 -> 752,402\n911,60 -> 911,932\n545,244 -> 110,244\n461,26 -> 461,18\n916,308 -> 161,308\n368,476 -> 515,476\n656,916 -> 409,669\n118,950 -> 118,135\n963,294 -> 365,294\n855,713 -> 323,713\n849,930 -> 48,129\n36,337 -> 588,889\n941,394 -> 941,697\n685,170 -> 323,170\n423,683 -> 423,152\n81,522 -> 121,522\n357,598 -> 159,796\n211,192 -> 211,50\n615,607 -> 270,952\n687,384 -> 687,128\n81,896 -> 925,52\n591,988 -> 20,988\n950,740 -> 605,740\n818,772 -> 623,772\n790,405 -> 790,775\n483,34 -> 718,34\n309,190 -> 309,894\n391,83 -> 483,83\n721,201 -> 721,843\n990,464 -> 990,171\n479,707 -> 688,707\n23,775 -> 510,775\n783,863 -> 867,779\n594,151 -> 208,151\n416,936 -> 416,720\n981,972 -> 120,111\n773,476 -> 138,476\n604,900 -> 604,395\n824,437 -> 531,437\n621,948 -> 32,948\n802,26 -> 887,26\n836,335 -> 836,784\n134,585 -> 634,85\n649,87 -> 649,263\n756,804 -> 638,804\n982,26 -> 21,987\n134,976 -> 914,196\n612,539 -> 612,141\n977,11 -> 22,966\n40,80 -> 40,644\n725,562 -> 604,562\n377,649 -> 352,624\n418,146 -> 130,434\n848,927 -> 848,970\n243,350 -> 342,449\n46,10 -> 46,112\n800,654 -> 272,126\n910,633 -> 910,426\n296,619 -> 882,33\n75,922 -> 497,500\n267,616 -> 864,616\n884,694 -> 624,694\n13,656 -> 831,656\n389,390 -> 389,316\n26,24 -> 987,985\n193,557 -> 589,161\n18,13 -> 978,973\n43,951 -> 614,951\n581,398 -> 885,94\n943,525 -> 279,525\n787,83 -> 137,83\n729,271 -> 729,18\n100,383 -> 100,690\n337,266 -> 102,266\n106,640 -> 298,832\n83,65 -> 543,65\n102,872 -> 663,872\n921,765 -> 921,782\n764,392 -> 471,685\n325,987 -> 802,987\n983,43 -> 983,852\n833,475 -> 416,58\n25,270 -> 686,931\n145,433 -> 151,433\n132,329 -> 973,329\n611,494 -> 98,494\n401,633 -> 866,168\n532,126 -> 532,448\n988,894 -> 361,894\n249,177 -> 249,133\n832,71 -> 832,245\n263,70 -> 263,152\n548,333 -> 548,748\n98,570 -> 438,910\n954,41 -> 41,954\n336,199 -> 336,843\n117,974 -> 845,246\n831,456 -> 890,515\n690,114 -> 804,114\n94,108 -> 94,672\n289,104 -> 107,286\n248,580 -> 229,580\n11,284 -> 885,284\n401,802 -> 186,802\n359,245 -> 558,46\n310,85 -> 310,714\n920,577 -> 979,577\n492,236 -> 276,452\n650,961 -> 49,360\n118,705 -> 118,794\n970,24 -> 80,914\n943,454 -> 943,30\n875,935 -> 716,776\n241,717 -> 392,717\n694,345 -> 620,345\n533,435 -> 467,435\n827,166 -> 374,166\n633,849 -> 884,849\n414,640 -> 875,179\n240,790 -> 709,321\n48,222 -> 104,222\n889,897 -> 44,52\n980,438 -> 455,963\n469,875 -> 469,706\n572,869 -> 250,547\n834,11 -> 834,188\n395,966 -> 395,547\n12,681 -> 567,681\n268,957 -> 947,957\n450,478 -> 893,921\n418,707 -> 602,891\n404,303 -> 218,489\n657,232 -> 657,945\n518,392 -> 518,621\n268,959 -> 896,331\n886,616 -> 841,616\n375,503 -> 375,387";

function parseInput(str) {
  return List.map((function (coords) {
                var points = $$Array.map((function (point) {
                        var xy = $$Array.of_list(List.map(Caml_format.caml_int_of_string, $$String.split_on_char(/* ',' */44, point)));
                        return [
                                Caml_array.get(xy, 0),
                                Caml_array.get(xy, 1)
                              ];
                      }), coords.split(" -> "));
                return [
                        Caml_array.get(points, 0),
                        Caml_array.get(points, 1)
                      ];
              }), $$String.split_on_char(/* '\n' */10, str));
}

function toKey(x, y) {
  return String(x) + "," + String(y);
}

function updateCountAtPoint(x, y, map) {
  return Belt_MapString.update(map, toKey(x, y), (function (p) {
                if (p !== undefined) {
                  return p + 1 | 0;
                } else {
                  return 1;
                }
              }));
}

function determineNextPoint(p1, p2) {
  if (p1 < p2) {
    return p1 + 1 | 0;
  } else {
    return p1 - 1 | 0;
  }
}

function addLineToMap(param, param$1, noDiagonals, map) {
  var y2 = param$1[1];
  var x2 = param$1[0];
  var y1 = param[1];
  var x1 = param[0];
  var _x = x1;
  var _y = y1;
  var _newMap = map;
  while(true) {
    var newMap = _newMap;
    var y = _y;
    var x = _x;
    if (x === x2 && y === y2) {
      return updateCountAtPoint(x, y, newMap);
    }
    if (x1 === x2) {
      var updated = updateCountAtPoint(x, y, newMap);
      _newMap = updated;
      _y = determineNextPoint(y, y2);
      continue ;
    }
    if (y1 === y2) {
      var updated$1 = updateCountAtPoint(x, y, newMap);
      _newMap = updated$1;
      _x = determineNextPoint(x, x2);
      continue ;
    }
    if (noDiagonals) {
      return newMap;
    }
    var nextX = determineNextPoint(x, x2);
    var nextY = determineNextPoint(y, y2);
    var updated$2 = updateCountAtPoint(x, y, newMap);
    _newMap = updated$2;
    _y = nextY;
    _x = nextX;
    continue ;
  };
}

function addLinesToMap(input, map) {
  return List.fold_left((function (prevMap, param) {
                return addLineToMap(param[0], param[1], true, prevMap);
              }), map, input);
}

function part1(param) {
  var input = parseInput(inputStr);
  var map = addLinesToMap(input, undefined);
  return Belt_MapString.keysToArray(Belt_MapString.keep(map, (function (param, count) {
                    return count > 1;
                  }))).length;
}

console.log("Part 1", part1(undefined));

function part2(param) {
  var input = parseInput(inputStr);
  var map = List.fold_left((function (prevMap, param) {
          return addLineToMap(param[0], param[1], false, prevMap);
        }), undefined, input);
  return Belt_MapString.keysToArray(Belt_MapString.keep(map, (function (param, count) {
                    return count > 1;
                  }))).length;
}

console.log("Part 2", part2(undefined));

var exampleInputStr = "0,9 -> 5,9\n8,0 -> 0,8\n9,4 -> 3,4\n2,2 -> 2,1\n7,0 -> 7,4\n6,4 -> 2,0\n0,9 -> 2,9\n3,4 -> 1,4\n0,0 -> 8,8\n5,5 -> 8,2";

exports.exampleInputStr = exampleInputStr;
exports.inputStr = inputStr;
exports.parseInput = parseInput;
exports.toKey = toKey;
exports.updateCountAtPoint = updateCountAtPoint;
exports.determineNextPoint = determineNextPoint;
exports.addLineToMap = addLineToMap;
exports.addLinesToMap = addLinesToMap;
exports.part1 = part1;
exports.part2 = part2;
/*  Not a pure module */
